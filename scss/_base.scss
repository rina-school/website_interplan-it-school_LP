@use './variables' as v;
@use './mixins' as m;
@use './function' as f;

*, ::before, ::after {
  box-sizing: border-box;
  color: v.$textColor;
}

body {
  font-family: v.$fontFamily;
}

main {
  padding-top: v.$pcHeaderHeight;

  @include m.mq {
    padding-top: v.$spHeaderHeight;
  }
}

section:not(.mv-contents) {
  padding: v.$pcSectionPaddingHeight 0;

  @include m.mq {
    padding: clamp(56px, f.pixelToVwSize(72, v.$spViewPort), v.$pcSectionPaddingHeight) 0;
  }
}

section.about-contents {
  padding-top: calc(v.$pcNavHeight + v.$pcSectionPaddingHeight);

  @include m.mq {
    padding-top: clamp(56px, f.pixelToVwSize(72, v.$spViewPort), v.$pcSectionPaddingHeight);
  }
}

section.production-contents {
  padding-bottom: f.pixelToRemSize(40);
}

h2.section-title {
  font-size: f.pixelToRemSize(v.$pixelSizeLg);
  font-weight: v.$fontWeightBold;
  line-height: v.$fontLineHeight52;
  text-align: center;
  margin-bottom: f.pixelToRemSize(48);

  @include m.mq {
    font-size: f.spMinRangeVwRemSize(v.$pixelSizeMd, v.$spViewPort, v.$pixelSizeLg);
    line-height: f.spMinRangeVwRemSize(35, v.$spViewPort, 52);
    margin-bottom: f.spMinRangeVwRemSize(40, v.$spViewPort, 48);
  }
}

p, li, dd {
  font-size: f.pixelToRemSize(v.$pixelSizeSm);
  line-height: v.$fontLineHeight28;

  @include m.mq {
    font-size: f.spMinRangeVwRemSize(v.$pixelSizeXs, v.$spViewPort, v.$pixelSizeSm);
    line-height: v.$fontLineHeight28;
  }
}

a {
  text-decoration: none;
}

li {
  list-style: none;
}

img {
  vertical-align: top;
  font-size: 0;
  line-height: 0;
}
